// This QuickSort uses insertion sort when the list gets too small for QS to be a good choice.
// That is if, I manage to implement this properly.
#include <iostream>
#include <vector>

void Swap(int& a, int& b)
{
    int temp = a;
    a = b;
    b = temp;
}

void InsertionSort(std::vector<int>& inputVector, int startIndex, int endIndex)
{
    for(unsigned int i = startIndex; i < endIndex; i++)
    {
        int j = i;
        while(j > 0 && inputVector[j - 1] > inputVector[j])
        {
            Swap(inputVector[j], inputVector[j - 1]);
            j--;
        }
    }
}

int Partition(std::vector<int>& inputVector, int startIndex, int endIndex)
{
    int pivot = inputVector[startIndex],
        i = startIndex,
        j = endIndex;

    while(i < j)
    {
        while(inputVector[i] <= pivot)
            i++;
        while(inputVector[j] > pivot)
            j--;

        if(i < j)
            Swap(inputVector[i], inputVector[j]);
    }

    Swap(inputVector[startIndex], inputVector[j]);
    return j;
}

void QuickSort(std::vector<int>& inputVector, int startIndex, int endIndex)
{
    if(startIndex + 10 < endIndex)
    {
        int j = Partition(inputVector, startIndex, endIndex);
        QuickSort(inputVector, startIndex, j - 1);
        QuickSort(inputVector, j + 1, endIndex);
    }
    else
    {
        InsertionSort(inputVector, startIndex, endIndex + 1);
    }
}

int main()
{
    // 1000 unsorted numbers.
    std::vector<int> input = 
    { 
      617, 1875, 681, 1773, 1494, 1816, 1078, 1689, 209, 655, 82, 1763, 1248, 1832, 1561, 219, 1789, 1806, 376, 283, 1074, 1811, 1439, 601,
      901, 462, 1145, 324, 1805, 1367, 870, 1696, 1974, 419, 1298, 1345, 1541, 1318, 892, 1427, 1847, 814, 90, 701, 1348, 530, 1919, 1814, 
      775, 1751, 1135, 323, 1146, 1868, 1793, 740, 531, 1081, 1388, 1667, 1867, 1475, 133, 1930, 843, 135, 1663, 703, 638, 513, 32, 1466, 
      779, 829, 865, 1034, 1725, 1459, 14, 677, 1781, 731, 818, 285, 1189, 1066, 766, 1437, 848, 131, 1398, 953, 812, 1382, 1512, 183, 130, 
      1372, 377, 803, 1313, 1537, 1579, 1674, 36, 1228, 1975, 1925, 1786, 218, 395, 629, 363, 1817, 751, 866, 851, 1447, 676, 837, 1695, 
      1291, 1687, 1850, 1854, 1721, 1736, 1131, 33, 84, 384, 1556, 397, 904, 729, 794, 1969, 1036, 1165, 1765, 878, 484, 1926, 546, 1197, 
      1337, 1514, 881, 1225, 641, 985, 619, 473, 1499, 1888, 912, 778, 1477, 267, 1591, 937, 998, 1458, 120, 684, 1390, 824, 945, 1642, 
      1202, 1502, 959, 1192, 1932, 2000, 1374, 1821, 1111, 1942, 1627, 964, 563, 1496, 24, 1980, 79, 71, 623, 1434, 592, 9, 1336, 434, 321, 
      275, 1846, 1246, 1429, 1787, 884, 173, 1547, 469, 774, 70, 1855, 280, 790, 580, 1403, 707, 1827, 656, 813, 700, 1085, 1039, 955, 1558, 
      688, 1924, 378, 1907, 1833, 1914, 273, 984, 51, 1563, 1289, 189, 107, 322, 1423, 1304, 670, 1240, 1840, 239, 750, 345, 974, 1151, 1683, 
      1311, 1810, 372, 94, 883, 1893, 1353, 1326, 1491, 1288, 444, 1485, 1108, 1256, 811, 958, 1668, 431, 880, 1604, 1008, 152, 102, 1931, 
      957, 614, 1460, 1527, 1265, 663, 1968, 708, 1517, 52, 1845, 224, 1385, 1470, 291, 1615, 1611, 314, 334, 1482, 960, 572, 1061, 151, 571, 
      1944, 95, 355, 1049, 1274, 327, 1618, 1595, 426, 449, 1858, 1438, 746, 1923, 251, 422, 439, 906, 1519, 1685, 1249, 1880, 166, 1681, 990, 
      386, 1798, 1656, 1409, 199, 366, 930, 643, 1295, 1484, 666, 382, 1109, 134, 1997, 1795, 554, 338, 675, 868, 42, 1361, 30, 1908, 1445, 
      807, 951, 1443, 1722, 854, 10, 1354, 728, 551, 1607, 1929, 1718, 1981, 1577, 1177, 1257, 1097, 521, 1463, 1737, 412, 1992, 190, 1597, 
      1433, 695, 753, 1862, 1426, 1224, 1261, 1076, 502, 1807, 1948, 1414, 1464, 1775, 402, 1991, 1605, 853, 1504, 1058, 1813, 244, 1720, 562, 
      370, 452, 1939, 1837, 694, 652, 1792, 826, 293, 1054, 1053, 89, 801, 446, 602, 1028, 31, 950, 749, 1646, 163, 621, 536, 874, 1652, 1571, 
      1167, 1310, 651, 1099, 1713, 26, 1628, 495, 233, 380, 1766, 1320, 1943, 1732, 1623, 1187, 1899, 1918, 494, 1017, 887, 1873, 1731, 308, 
      902, 1988, 1262, 913, 1332, 1870, 1366, 981, 1201, 53, 447, 917, 940, 1538, 1129, 1803, 453, 1973, 661, 875, 662, 798, 1708, 645, 1928, 
      1052, 1498, 712, 762, 589, 1636, 1625, 1915, 1729, 1505, 869, 74, 1717, 316, 1692, 699, 788, 1859, 1324, 733, 1048, 1704, 1543, 1091, 
      1181, 841, 817, 195, 573, 578, 6, 519, 1305, 1525, 3, 1860, 1587, 171, 1196, 828, 934, 399, 474, 64, 1698, 343, 1823, 899, 1452, 1303, 
      593, 1095, 1116, 763, 295, 236, 719, 1620, 1890, 1446, 633, 879, 301, 457, 1156, 1877, 1671, 1468, 1906, 1946, 479, 1599, 967, 1088, 
      776, 1126, 1350, 1526, 808, 840, 1760, 482, 400, 1740, 1865, 1042, 535, 1309, 1141, 1580, 927, 722, 1843, 632, 88, 1009, 1994, 436, 
      885, 1747, 1669, 257, 1534, 620, 17, 1352, 220, 1027, 1060, 98, 265, 1007, 341, 1186, 1119, 956, 124, 1588, 1006, 73, 844, 1357, 1397, 
      329, 1983, 1195, 1866, 40, 141, 1701, 1430, 639, 1220, 1553, 686, 1949, 933, 946, 364, 1123, 1902, 896, 1552, 1826, 147, 466, 4, 463, 
      1790, 679, 512, 1952, 256, 784, 1168, 1644, 427, 1632, 514, 768, 354, 1509, 1684, 1251, 1114, 269, 1137, 21, 111, 456, 1764, 864, 348, 
      228, 155, 1393, 1977, 1727, 1987, 581, 1564, 1399, 1694, 1510, 1735, 1869, 823, 1096, 317, 360, 795, 1392, 1638, 197, 672, 1171, 1344, 
      735, 815, 45, 1613, 697, 125, 1951, 1059, 1037, 1769, 272, 270, 481, 653, 246, 1051, 685, 1955, 834, 66, 1086, 96, 537, 1448, 1406, 
      845, 1724, 726, 49, 1715, 1293, 226, 1489, 987, 1967, 738, 863, 101, 1349, 791, 1150, 1247, 1999, 203, 1863, 1940, 1143, 221, 1312, 
      1584, 872, 1205, 524, 1566, 755, 240, 1856, 1120, 1819, 1756, 172, 1801, 192, 77, 168, 1159, 483, 698, 1282, 1133, 894, 657, 1018, 43, 
      520, 180, 117, 1190, 1592, 1549, 1032, 303, 1565, 122, 1250, 1338, 206, 1520, 1711, 1540, 109, 1901, 75, 1884, 566, 1677, 138, 1979, 
      1112, 1077, 217, 27, 1503, 961, 654, 105, 44, 1090, 1450, 1848, 1889, 1480, 1785, 1281, 553, 23, 311, 1235, 727, 1965, 1545, 263, 1379, 
      1153, 1733, 1634, 1630, 968, 205, 485, 1728, 769, 1492, 604, 123, 1067, 1661, 1075, 1297, 1629, 1834, 538, 1022, 1102, 164, 1626, 391, 
      1555, 1624, 1043, 496, 1649, 1118, 660, 1800, 56, 785, 1170, 783, 1898, 396, 1244, 715, 1495, 1745, 298, 1279, 1664, 1063, 1989, 1083, 
      802, 971, 1913, 1472, 215, 569, 234, 1596, 919, 1791, 544, 201, 1208, 1413, 204, 518, 1140, 467, 710, 15, 548, 1055, 526, 231, 1964, 
      312, 1016, 510, 116, 862, 1469, 1432, 385, 227, 1308, 1573, 799, 1290, 630, 897, 47, 969, 1665, 1299, 1107, 1237, 800, 1130, 796, 1462, 
      358, 1653, 1004, 443, 1643, 1273, 136, 225, 737, 470, 406, 624, 846, 1010, 1654, 1322, 407, 1936, 1014, 437, 509, 720, 448, 1191, 1416, 
      713, 667, 744, 903, 39, 500, 1757, 1782, 375, 1012, 587, 628, 757, 995, 1068, 417, 1719, 900, 282, 1327, 1013, 754, 1125, 58, 664, 325, 
      1239, 1243, 1333, 207, 1174, 976, 433, 1347, 1307, 414, 352, 1098, 1064, 313, 704, 1911, 936, 511, 1481, 59, 1435, 743, 787, 208, 758, 
      635, 162, 1395, 299, 401, 859, 1602, 978, 196, 1122, 489, 1809, 1144, 991, 591, 1744, 1576, 948, 928, 1853, 1640, 1572, 552, 55, 542, 
      332, 339, 1421, 972, 212, 1530, 286, 241, 488, 609, 650, 1838, 1500, 1215, 242
    };
    
    QuickSort(input, 0, input.size() - 1);

    for(unsigned int i = 0; i < input.size(); i++)
        std::cout << input[i] << " ";
    std::cout << std::endl;

    return 0;
}
